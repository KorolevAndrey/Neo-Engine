


layout(std140, binding = 0) buffer Pos
{
	vec4 pos[];
};


uniform float timestep;

layout (local_size_x = 1536, local_size_y = 1, local_size_z = 1) in;
void main()
{
	// Read the current global position for this thread
	uint i = gl_GlobalInvocationID.x;

    vec3 p = pos[i].xyz;

    float dx = 0;
    float dy = 0;
    float dz = 0;
    float x = p.x;
    float y = p.y;
    float z = p.z;
    
    float a = 0.9;
    float b = 5.0;
    float c = 9.9;
    float d = 1.0;
    
    dx = (-a*x+ y*y - z*z + a *c) * timestep;
    dy = (x*(y-b*z)+d) * timestep;
    dz = (-z + x*(b*y +z)) * timestep; 
    
    p += vec3(dx, dy, dz);

    pos[i] = vec4(p, 1.0);
}
